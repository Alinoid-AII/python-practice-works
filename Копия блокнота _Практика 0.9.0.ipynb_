{"cells":[{"cell_type":"markdown","metadata":{"id":"8hJfL9b2l439"},"source":["ФИО"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wRnqvYOkl6EX"},"outputs":[],"source":["Мингалева А.Е"]},{"cell_type":"markdown","metadata":{"id":"weOtPwPQmgpD"},"source":["# Дисклеймер"]},{"cell_type":"markdown","metadata":{"id":"LznB3uscmjDa"},"source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно"]},{"cell_type":"markdown","metadata":{"id":"7nSJIqkTvC_C"},"source":["# Задание 0"]},{"cell_type":"markdown","metadata":{"id":"exACjTiVvGUe"},"source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":258,"status":"ok","timestamp":1731405609255,"user":{"displayName":"Алина Мингалёва","userId":"06959250630310689797"},"user_tz":-300},"id":"SqWULC9CvFd6","outputId":"60437341-64f4-49fb-d1a6-133d8876423d"},"outputs":[{"data":{"text/plain":["{1, 2, 3, 4, 5, 6}"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","\n","\n","def uniq():\n","    c = set(a).union(set(b))\n","    return c\n","\n","\n","uniq()"]},{"cell_type":"markdown","metadata":{"id":"SVWNlBALpCNo"},"source":["# Задание 1"]},{"cell_type":"markdown","metadata":{"id":"RcKA-VEqpC7f"},"source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18611,"status":"ok","timestamp":1731710907398,"user":{"displayName":"Алина Мингалёва","userId":"06959250630310689797"},"user_tz":-300},"id":"hE7mF-HXpJLO","outputId":"fa25a63a-280d-4415-8680-ea93233a0800"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'имя': 'Барсик', 'тип': 'кот', 'возраст': 3, 'id': 1, 'голод': 0, 'радость': 0, 'энергия': 0}\n","{'имя': 'Шарик', 'тип': 'собака', 'возраст': 5, 'id': 2, 'голод': 0, 'радость': 0, 'энергия': 0}\n","{'имя': 'Рыжик', 'тип': 'кот', 'возраст': 2, 'id': 3, 'голод': 0, 'радость': 0, 'энергия': 0}\n","{'имя': 'Гоша', 'тип': 'попугай', 'возраст': 1, 'id': 4, 'голод': 0, 'радость': 0, 'энергия': 0}\n","{'имя': 'Мурка', 'тип': 'кошка', 'возраст': 4, 'id': 5, 'голод': 0, 'радость': 0, 'энергия': 0}\n","{'имя': 'Кеша', 'тип': 'попугай', 'возраст': 3, 'id': 6, 'голод': 0, 'радость': 0, 'энергия': 0}\n","{'имя': 'Бобик', 'тип': 'собака', 'возраст': 6, 'id': 7, 'голод': 0, 'радость': 0, 'энергия': 0}\n","Введите id питомца: 2\n","Данные вашего питомца:  {'имя': 'Шарик', 'тип': 'собака', 'возраст': 5, 'id': 2, 'голод': 0, 'радость': 0, 'энергия': 0}\n","\n","Ухажвать за питомцем:\n","1. Покормить\n","2. Поиграть\n","3. Уложить спать\n","4. Посмотреть состояние\n","5. Выйти\n","Выберите номер функции: 3\n","\n","Вы уложили спать питомца\n","\n","Ухажвать за питомцем:\n","1. Покормить\n","2. Поиграть\n","3. Уложить спать\n","4. Посмотреть состояние\n","5. Выйти\n","Выберите номер функции: 3\n","\n","Вы уложили спать питомца\n","\n","Ухажвать за питомцем:\n","1. Покормить\n","2. Поиграть\n","3. Уложить спать\n","4. Посмотреть состояние\n","5. Выйти\n","Выберите номер функции: 3\n","\n","Вы уложили спать питомца\n","\n","Ухажвать за питомцем:\n","1. Покормить\n","2. Поиграть\n","3. Уложить спать\n","4. Посмотреть состояние\n","5. Выйти\n","Выберите номер функции: 4\n","Состояние питомца:\n","\n","Голод: 0, радость: 0, энергия: 30\n","\n","Ухажвать за питомцем:\n","1. Покормить\n","2. Поиграть\n","3. Уложить спать\n","4. Посмотреть состояние\n","5. Выйти\n","Выберите номер функции: 5\n"]}],"source":["def condition(pet_cond):\n","    print(\"Состояние питомца:\")\n","    print(f\"\\nГолод: {pet_cond['голод']}, радость: {pet_cond['радость']}, энергия: {pet_cond['энергия']}\")\n","\n","\n","def care(pet_data):\n","    while True:\n","        print(\"\\nУхажвать за питомцем:\")\n","        print(\"1. Покормить\")\n","        print(\"2. Поиграть\")\n","        print(\"3. Уложить спать\")\n","        print(\"4. Посмотреть состояние\")\n","        print(\"5. Выйти\")\n","        care_choice = int(input(\"Выберите номер функции: \"))\n","        if care_choice == 1:\n","            pet_data['голод'] += 10\n","            print(\"\\nВы покормили питомца\")\n","        elif care_choice == 2:\n","            pet_data['радость'] += 10\n","            print(\"\\nВы поиграли с питомцем\")\n","        elif care_choice == 3:\n","            pet_data['энергия'] += 10\n","            print(\"\\nВы уложили спать питомца\")\n","        elif care_choice == 4:\n","            condition(pet_data)\n","        elif care_choice == 5:\n","            break\n","\n","\n","def adopt():\n","    pets = [\n","        {\"имя\": \"Барсик\", \"тип\": \"кот\", \"возраст\": 3, 'id': 1, \"голод\": 0,\n","         'радость': 0, 'энергия': 0},\n","        {\"имя\": \"Шарик\", \"тип\": \"собака\", \"возраст\": 5, 'id': 2, \"голод\": 0,\n","         'радость': 0, 'энергия': 0},\n","        {\"имя\": \"Рыжик\", \"тип\": \"кот\", \"возраст\": 2, 'id': 3, \"голод\": 0,\n","         'радость': 0, 'энергия': 0},\n","        {\"имя\": \"Гоша\", \"тип\": \"попугай\", \"возраст\": 1, 'id': 4, \"голод\": 0,\n","         'радость': 0, 'энергия': 0},\n","        {\"имя\": \"Мурка\", \"тип\": \"кошка\", \"возраст\": 4, 'id': 5, \"голод\": 0,\n","         'радость': 0, 'энергия': 0},\n","        {\"имя\": \"Кеша\", \"тип\": \"попугай\", \"возраст\": 3, 'id': 6, \"голод\": 0,\n","         'радость': 0, 'энергия': 0},\n","        {\"имя\": \"Бобик\", \"тип\": \"собака\", \"возраст\": 6, 'id': 7, \"голод\": 0,\n","         'радость': 0, 'энергия': 0}\n","    ]\n","\n","    print(*pets, sep='\\n')\n","\n","    pet_id = int(input(\"Введите id питомца: \"))\n","\n","    for i in range(len(pets)):\n","        if pet_id == pets[i]['id']:\n","            pet = pets[i]\n","            print(\"Данные вашего питомца: \", pet)\n","    care(pet)\n","\n","\n","feed_lvl = 0\n","play_lvl = 0\n","sleep_lvl = 0\n","\n","adopt()\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"qZ7qFQnmssNd"},"source":["# Задание 2"]},{"cell_type":"markdown","metadata":{"id":"UaccTe7ltNvg"},"source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LCcxp5Q0srjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732307942802,"user_tz":-300,"elapsed":22650,"user":{"displayName":"Алина Мингалёва","userId":"06959250630310689797"}},"outputId":"6c57c2b1-b138-45ca-b10d-0cb7d0de9c70"},"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя вашего рыцаря: gvk\n","Введите название доспех: ghg\n","Введите название оружия: fgh\n","Введите значение урона: 9\n","Введите значение здоровья: 90\n","Введите имя дракона: h\n","Введите значение урона: 9\n","Введите значение здоровья: 90\n","gvk атаковал h, урон: 0, оставшееся здоровье: 90\n","h атаковал gvk, урон: 12, оставшееся здоровье: 78\n","gvk атаковал h, урон: 3, оставшееся здоровье: 87\n","h атаковал gvk, урон: 2, оставшееся здоровье: 76\n","gvk атаковал h, урон: 19, оставшееся здоровье: 68\n","h атаковал gvk, урон: 0, оставшееся здоровье: 76\n","gvk атаковал h, урон: 10, оставшееся здоровье: 58\n","h атаковал gvk, урон: 18, оставшееся здоровье: 58\n","gvk атаковал h, урон: 2, оставшееся здоровье: 56\n","h атаковал gvk, урон: 5, оставшееся здоровье: 53\n","gvk атаковал h, урон: 8, оставшееся здоровье: 48\n","h атаковал gvk, урон: 10, оставшееся здоровье: 43\n","gvk атаковал h, урон: 5, оставшееся здоровье: 43\n","h атаковал gvk, урон: 6, оставшееся здоровье: 37\n","gvk атаковал h, урон: 1, оставшееся здоровье: 42\n","h атаковал gvk, урон: -1, оставшееся здоровье: 38\n","gvk атаковал h, урон: 18, оставшееся здоровье: 24\n","h атаковал gvk, урон: 0, оставшееся здоровье: 38\n","gvk атаковал h, урон: 0, оставшееся здоровье: 24\n","h атаковал gvk, урон: 8, оставшееся здоровье: 30\n","gvk атаковал h, урон: 14, оставшееся здоровье: 10\n","h атаковал gvk, урон: 12, оставшееся здоровье: 18\n","gvk атаковал h, урон: 5, оставшееся здоровье: 5\n","h атаковал gvk, урон: 5, оставшееся здоровье: 13\n","gvk атаковал h, урон: 1, оставшееся здоровье: 4\n","h атаковал gvk, урон: 15, оставшееся здоровье: -2\n","h победил gvk!\n"]}],"source":["import random\n","\n","\n","def battle(knight, dragon):\n","    while knight[\"health\"] > 0 and dragon[\"health\"] > 0:\n","        print(battle_system(knight, dragon))\n","        if dragon[\"health\"] > 0:\n","            print(battle_system(dragon, knight))\n","\n","    if knight[\"health\"] > 0:\n","        print(f\"{knight['name']} победил дракона {dragon['name']}!\")\n","    else:\n","        print(f\"{dragon['name']} победил {knight['name']}!\")\n","\n","\n","def battle_system(fighter, defender):\n","    damage_done = random.randint(fighter['damage'] - 10, fighter['damage'] + 10)\n","    defender[\"health\"] -= damage_done\n","\n","    return f\"{fighter['name']} атаковал {defender['name']}, урон: {damage_done}, оставшееся здоровье: {defender['health']}\"\n","\n","\n","def knight_create():\n","    name = input(\"Введите имя вашего рыцаря: \")\n","    armor = input(\"Введите название доспех: \")\n","    weapon = input(\"Введите название оружия: \")\n","    damage = int(input(\"Введите значение урона: \"))\n","    health = int(input(\"Введите значение здоровья: \"))\n","\n","    knight = {\n","        \"name\": name,\n","        \"armor\": armor,\n","        \"weapon\": weapon,\n","        \"damage\": damage,\n","        \"health\": health\n","    }\n","\n","    return knight\n","\n","\n","def dragon_create():\n","    name = input(\"Введите имя дракона: \")\n","    damage = int(input(\"Введите значение урона: \"))\n","    health = int(input(\"Введите значение здоровья: \"))\n","    dragon = {\n","        \"name\": name,\n","        \"damage\": damage,\n","        \"health\": health\n","    }\n","    return dragon\n","\n","\n","knight = knight_create()\n","dragon = dragon_create()\n","\n","battle(knight, dragon)\n"]},{"cell_type":"markdown","metadata":{"id":"N8oFiEXol3e2"},"source":["# Задание 3\n"]},{"cell_type":"markdown","metadata":{"id":"9p4WQG_Vl7wB"},"source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NnGYp1MTqi5k","executionInfo":{"status":"ok","timestamp":1731776760399,"user_tz":-300,"elapsed":382211,"user":{"displayName":"Алина Мингалёва","userId":"06959250630310689797"}},"outputId":"fde3a1ee-4438-415f-fed0-23afa4b708e7"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Функции:\n","1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","2. Удалять покемонов из их команды.\n","3. Просматривать подробную информацию обо всех покемонах в команде.\n","4. Находить покемона по имени.\n","5. Устраивать тренировочный бой между двумя покемонами\n","6. Выход\n","Введите номер функции: 1\n","Введите имя покемона: Sandshrew\n","Покемон sandshrew добавлен в команду!\n","\n","Функции:\n","1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","2. Удалять покемонов из их команды.\n","3. Просматривать подробную информацию обо всех покемонах в команде.\n","4. Находить покемона по имени.\n","5. Устраивать тренировочный бой между двумя покемонами\n","6. Выход\n","Введите номер функции: 1\n","Введите имя покемона: Nidorina\n","Покемон nidorina добавлен в команду!\n","\n","Функции:\n","1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","2. Удалять покемонов из их команды.\n","3. Просматривать подробную информацию обо всех покемонах в команде.\n","4. Находить покемона по имени.\n","5. Устраивать тренировочный бой между двумя покемонами\n","6. Выход\n","Введите номер функции: 3\n","[{'name': 'sandshrew', 'id': 27, 'height': 6, 'weight': 120, 'base_experience': 60, 'types': ['ground']}, {'name': 'nidorina', 'id': 30, 'height': 8, 'weight': 200, 'base_experience': 128, 'types': ['poison']}]\n","\n","Функции:\n","1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","2. Удалять покемонов из их команды.\n","3. Просматривать подробную информацию обо всех покемонах в команде.\n","4. Находить покемона по имени.\n","5. Устраивать тренировочный бой между двумя покемонами\n","6. Выход\n","Введите номер функции: 5\n","Введите имя первого покемона: sandshrew\n","Введите имя второго покемона: nidorina\n","Победил покемон nidorina\n","\n","Функции:\n","1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","2. Удалять покемонов из их команды.\n","3. Просматривать подробную информацию обо всех покемонах в команде.\n","4. Находить покемона по имени.\n","5. Устраивать тренировочный бой между двумя покемонами\n","6. Выход\n","Введите номер функции: 6\n","Выйти\n"]}],"source":["import requests\n","\n","\n","def add_poke(team):\n","  poke_name = input('Введите имя покемона: ').lower()\n","\n","  if poke_name not in team:\n","    response = requests.get(f'https://pokeapi.co/api/v2/pokemon/{poke_name}')\n","    if response.status_code == 200:\n","        poke_data = response.json()\n","        poke_added = {\n","            'name': poke_data['name'],\n","            'id': poke_data['id'],\n","            'height': poke_data['height'],\n","            'weight': poke_data['weight'],\n","            'base_experience': poke_data['base_experience'],\n","            'types': [t['type']['name'] for t in poke_data['types']]\n","        }\n","        team.append(poke_added)\n","        print(f'Покемон {poke_added[\"name\"]} добавлен в команду!')\n","        return team\n","    else:\n","        print(f'Покемон {poke_name} не найден.')\n","        return None\n","\n","\n","def delete(team):\n","    poke_name = input('Введите имя покемона: ').lower()\n","\n","    for pokemon in team:\n","        if pokemon['name'] == poke_name:\n","            team.remove(pokemon)\n","            print(f'Покемон {poke_name} удален из команды.')\n","            return\n","\n","    print(f'Покемон {poke_name} не найден в команде.')\n","\n","\n","def find(team):\n","    poke_name = input('Введите имя покемона: ').lower()\n","\n","    for pokemon in team:\n","        if pokemon['name'] == poke_name:\n","            print(pokemon)\n","            return\n","\n","    print(f'Покемон {poke_name} не найден в команде.')\n","\n","\n","def battle(team):\n","    poke_1 = input('Введите имя первого покемона: ').lower()\n","    poke_2 = input('Введите имя второго покемона: ').lower()\n","\n","    for pokemon in team:\n","        if pokemon['name'] == poke_1:\n","            fighter_1 = pokemon\n","        if pokemon['name'] == poke_2:\n","            fighter_2 = pokemon\n","\n","    if fighter_1['base_experience'] > fighter_2['base_experience']:\n","        print(f'Победил покемон {poke_1}')\n","    elif fighter_2['base_experience'] > fighter_1['base_experience']:\n","        print(f'Победил покемон {poke_2}')\n","    else:\n","        print('Ничья')\n","\n","\n","def main():\n","    team = list()\n","\n","    while True:\n","        print(\"\\nФункции:\")\n","        print(\"1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\")\n","        print(\"2. Удалять покемонов из их команды.\")\n","        print(\"3. Просматривать подробную информацию обо всех покемонах в команде.\")\n","        print(\"4. Находить покемона по имени.\")\n","        print(\"5. Устраивать тренировочный бой между двумя покемонами\")\n","        print(\"6. Выход\")\n","\n","        choice = int(input(\"Введите номер функции: \"))\n","\n","        if choice == 1:\n","            add_poke(team)\n","\n","        elif choice == 2:\n","            delete(team)\n","\n","        elif choice == 3:\n","            print(team)\n","\n","        elif choice == 4:\n","            find(team)\n","\n","        elif choice == 5:\n","            battle(team)\n","\n","        elif choice == 6:\n","            print(\"Выйти\")\n","            break\n","\n","        else:\n","            print(\"Не удалось получить число! Введите порядковый номер функции\")\n","\n","\n","main()"]}],"metadata":{"colab":{"provenance":[{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731404035853}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}