{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"g6F6cMWoF9Y_"},"outputs":[],"source":["Мингалева Алина Евгеньевна"]},{"cell_type":"markdown","metadata":{"id":"ra45s33wUt-C"},"source":["# Задание 1"]},{"cell_type":"markdown","metadata":{"id":"G56D5mNCUwp5"},"source":["Задача: Создать чат бота для получения информации об исследованиях космоса\n","\n","Описание: Создайте комплексное приложение командной строки, которое будет использоваться в качестве панели управления исследованиями космоса. Данное приложение будет обращаться к https://api.nasa.gov/ для предоставления пользователям набора информации о космосе, включая:\n","\n","- Астрономическая картинка дня (APOD): Отображение APOD с пояснениями к нему.\n","- Фотографии с марсохода: позволяет пользователям выбирать и фильтровать фотографии с марсохода по дате и типу камеры.\n","- Объекты, сближающиеся с Землей (ОСЗ): Поиск и отображение информации об объекте, сближающихся с Землей, на определенную дату, включая их размеры и потенциальную опасность.\n","- Данные о космической погоде: Отображают последние данные о космической погоде, включая солнечные вспышки и геомагнитные бури.\n","Приложение должно позволять пользователям ориентироваться в этих функциях, корректно обрабатывать ошибки и обеспечивать удобство работы.\n","\n","Требования:\n","- Пользовательский ввод: Приложение должно предложить пользователю ввести данные, чтобы выбрать, какую функцию он хочет изучить.\n","- Проверка данных: Убедитесь, что пользовательские данные (например, даты) проверены.\n","- Обработка ошибок: Корректно обрабатывайте ошибки API и неверные ответы.\n","- Представление данных: Представляйте данные в четкой и организованной форме.\n","- Опция выхода: позволяет пользователям выходить из приложения в любое время."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10146,"status":"ok","timestamp":1731203850729,"user":{"displayName":"Алина Мингалёва","userId":"06959250630310689797"},"user_tz":-300},"id":"wGeJM9n4UqUD","outputId":"e931946b-709a-4f2d-c02c-4d4ecbdc4eab"},"outputs":[{"name":"stdout","output_type":"stream","text":["Что может показать бот?\n","\n","1. Астрономическую картинку дня (APOD)\n","2. Фотографии с марсохода\n","3. Объекты, сближающиеся с Землей (ОСЗ)\n","4. Данные о космической погоде\n","Введите номер функции: 4\n","Введите дату в формате YYYY-MM-DD2012-12-12\n","## NASA Goddard Space Flight Center, Space Weather Research Center ( SWRC )\n","## Message Type: Space Weather Alert\n","##\n","## Message Issue Date: 2012-11-14T04:15:00Z\n","## Message ID: 20121104-AL-001\n","\n","## Summary:\n","\n","Ongoing / Intensifying space weather storm in the Earth's magnetosphere. Geomagnetic Kp index has reached level 6 (moderate) starting at 2012-11-14T01:30Z.\n","\n","The storm is caused by the CME with ID 2012-11-09T15:24:00-CME-001.\n","\n","Spacecraft at GEO, MEO, polar and other orbits passing through or in the vicinity of the Earth's ring current and auroral regions can be impacted.\n","\n","Activity ID: 2012-11-14T01:30:00-GST-001.\n","\n","## Notes:\n","\n","NASA GSFC Space Weather Research Center ( SWRC, http://swrc.gsfc.nasa.gov ) Disclaimer\n","\n","Data and/or information from the NASA GSFC Space Weather Research Center is provided â??as isâ?? without any warranty of any kind, either expressed, implied, or statutory, including, but not limited to, any warranty that the data and/or information will conform to specifications, any implied warranties of merchantability, fitness for a particular purpose, or freedom from infringement, any warranty that the information will be error free, or any warranty that documentation, if provided, will conform to the data and/or information. In no event shall the United States Government, or its contractors or subcontractors, be liable for any damages, including, but not limited to, direct, indirect, special or consequential damages, arising out of, resulting from, or in any way connected with this information, whether or not based upon warranty, contract, tort, or otherwise, whether or not injury was sustained by persons or property or otherwise, and whether or not loss was sustained from, or arose out of the results of, or use of, the data and/or information. The United States Government disclaims all warranties and liabilities regarding third party data and/or information, if present in the data and/or information generated and / or compiled by the NASA GSFC Space Weather Research Center, and distributes it â??as isâ??.\n","\n","Use of data and/or information from the NASA GSFC Space Weather Research Center does not, in any manner, constitute an endorsement by NASA of any test results, resulting designs, hardware, or other matters. Use of data and/or information from the NASA GSFC Space Weather Research Center does not, in any manner, constitute the grant of a license to RECIPIENT under any NASA copyright, patent, patent application or other intellectual property.\n","\n","The terms of this disclaimer shall be construed, and the legal relations between the parties hereto shall be determined, in accordance with United States federal law.\n","\n","For questions, comments, requests etc. contact: GSFC-Space-Weather-Center \n","[\"## NASA Goddard Space Flight Center, Space Weather Research Center ( SWRC )\\n## Message Type: Space Weather Alert\\n##\\n## Message Issue Date: 2012-11-14T04:15:00Z\\n## Message ID: 20121104-AL-001\\n\\n## Summary:\\n\\nOngoing / Intensifying space weather storm in the Earth's magnetosphere. Geomagnetic Kp index has reached level 6 (moderate) starting at 2012-11-14T01:30Z.\\n\\nThe storm is caused by the CME with ID 2012-11-09T15:24:00-CME-001.\\n\\nSpacecraft at GEO, MEO, polar and other orbits passing through or in the vicinity of the Earth's ring current and auroral regions can be impacted.\\n\\nActivity ID: 2012-11-14T01:30:00-GST-001.\\n\\n\", '\\n\\nNASA GSFC Space Weather Research Center ( SWRC, http://swrc.gsfc.nasa.gov ) Disclaimer\\n\\nData and/or information from the NASA GSFC Space Weather Research Center is provided â??as isâ?? without any warranty of any kind, either expressed, implied, or statutory, including, but not limited to, any warranty that the data and/or information will conform to specifications, any implied warranties of merchantability, fitness for a particular purpose, or freedom from infringement, any warranty that the information will be error free, or any warranty that documentation, if provided, will conform to the data and/or information. In no event shall the United States Government, or its contractors or subcontractors, be liable for any damages, including, but not limited to, direct, indirect, special or consequential damages, arising out of, resulting from, or in any way connected with this information, whether or not based upon warranty, contract, tort, or otherwise, whether or not injury was sustained by persons or property or otherwise, and whether or not loss was sustained from, or arose out of the results of, or use of, the data and/or information. The United States Government disclaims all warranties and liabilities regarding third party data and/or information, if present in the data and/or information generated and / or compiled by the NASA GSFC Space Weather Research Center, and distributes it â??as isâ??.\\n\\nUse of data and/or information from the NASA GSFC Space Weather Research Center does not, in any manner, constitute an endorsement by NASA of any test results, resulting designs, hardware, or other matters. Use of data and/or information from the NASA GSFC Space Weather Research Center does not, in any manner, constitute the grant of a license to RECIPIENT under any NASA copyright, patent, patent application or other intellectual property.\\n\\nThe terms of this disclaimer shall be construed, and the legal relations between the parties hereto shall be determined, in accordance with United States federal law.\\n\\nFor questions, comments, requests etc. contact: GSFC-Space-Weather-Center ']\n"]}],"source":["import requests\n","\n","api_k = 'EXpvLzHbQAwxOHEpwCNRvTbRmkDJ9mf65af7MHfS'\n","\n","\n","def apod():\n","    response_apod = requests.get(f'https://api.nasa.gov/planetary/apod?api_key={api_k}')\n","    print(response_apod.json()['url'] + '\\n' + response_apod.json()['explanation'])\n","\n","\n","def mars_rover():\n","    date = input('Введите дату в формате YYYY-MM-DD')\n","    camera = input('Введите название камеры: ').upper()\n","    response_mars = requests.get(f'https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?camera={camera}&earth_date={date}&api_key={api_k}')\n","    photos = response_mars.json()['photos']\n","\n","    for i in range(len(photos)):\n","      print(photos[i]['img_src'])\n","\n","    print(response_mars.json()['photos'])\n","\n","\n","def neo():\n","    date = input('Введите дату в формате YYYY-MM-DD')\n","    response_neo = requests.get(f'https://api.nasa.gov/neo/rest/v1/feed?start_date={date}&end_date={date}&api_key={api_k}')\n","    objects = response_neo.json().get('near_earth_objects', {}).get(date, [])\n","\n","    for obj in objects:\n","      print(f\"Название: {obj['name']}\")\n","      print(f\"Диаметр: {obj['estimated_diameter']['meters']['estimated_diameter_max']:.2f}\")\n","      print(f\"Потенциальная опасность: {'Есть' if obj['is_potentially_hazardous_asteroid'] else 'Нет'}\")\n","      print(f\"Дата приближения: {obj['close_approach_data'][0]['close_approach_date']}\")\n","    print(response_neo.json())\n","\n","\n","def donki():\n","    date = input('Введите дату в формате YYYY-MM-DD')\n","    response_gst = requests.get(f'https://api.nasa.gov/DONKI/notifications?startDate={date}&endDate={date}&type=GST&api_key={api_k}')\n","    print(response_gst.json()[0]['messageBody'])\n","    print(str)\n","\n","\n","def give_answer(question):\n","    if question == 1:\n","        apod()\n","    elif question == 2:\n","        mars_rover()\n","    elif question == 3:\n","        neo()\n","    elif question == 4:\n","        donki()\n","\n","\n","def get_question():\n","    try:\n","        question = int(input(\"Введите номер функции: \"))\n","        give_answer(question)\n","    except ValueError:\n","        print(\"Не удалось получить число! Введите порядковый номер функции\")\n","\n","\n","print('Что может показать бот?\\n')\n","print('1. Астрономическую картинку дня (APOD)')\n","print('2. Фотографии с марсохода')\n","print('3. Объекты, сближающиеся с Землей (ОСЗ)')\n","print('4. Данные о космической погоде')\n","get_question()"]},{"cell_type":"markdown","metadata":{"id":"ia9UtA0cU1Iy"},"source":["# Задание 2"]},{"cell_type":"markdown","metadata":{"id":"Ofu_GmqrU1Iy"},"source":["Описание задачи\n","\n","Цель этой задачи - создать скрипт на Python, который взаимодействует с API Чикагского института искусств (https://api.artic.edu/docs/) для извлечения и отображения произведений искусства. Скрипт должен позволять пользователям просматривать работы по страницам, фильтровать их по имени художника и просматривать подробную информацию о выбранных произведениях искусства. Ниже приведены требования и функциональные возможности, которые необходимо реализовать:\n","\n","Требования:\n","Извлекать произведения искусства:\n","\n","- Создайте функцию, которая извлекает список произведений искусства из API Чикагского института искусств.\n","Функция должна принимать параметр page для разбивки на страницы и возвращать список произведений искусства вместе с информацией о разбивке на страницы.\n","Фильтровать произведения искусства:\n","\n","- Реализуйте функцию, которая фильтрует список произведений искусства на основе имени указанного художника. Функция должна возвращать список работ, которые соответствуют имени художника (без учета регистра).\n","Отображать подробную информацию об оформлении:\n","\n","- Напишите функцию, которая отображает названия работ для пользователя и позволяет ему выбрать одну из них, введя соответствующий номер.\n","После выбора функция должна отображать подробную информацию о выбранном произведении, включая название, исполнителя, дату и носитель.\n","Разбивка на страницы и взаимодействие с пользователем:\n","\n","- Создайте основную функцию, которая управляет выборкой произведений и взаимодействием с пользователем.\n","\n","Разрешите пользователям перемещаться по страницам с произведениями искусства, выполнять фильтрацию по исполнителю или выходить из программы.\n","\n","Если страниц с произведениями искусства несколько, укажите варианты перехода к следующей странице, предыдущей странице, фильтрации по исполнителю или выхода из программы."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"jjUH1GznU1Iy","outputId":"07fe77d4-ff77-439f-96fc-4d0a438a5388"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Список произведений на странице 1\n","1. Peacock Weather Vane by Artist unknown\n","2. Funerary Papyrus of Tayu-henut-Mut by Ancient Egyptian\n","3. The Crucifixion by Francescuccio Ghissi\n","4. Two Putti by Matteo di Giovanni\n","5. Fragment from Christ Carrying the Cross: Saint John the Evangelist by Jean Hey, (the Master of Moulins)\n","6. Elements I by Nancy Hemenway Barton\n","7. The Tables Have Turned by Dawn Zero Erickson\n","8. Linear by Joseph R. Bobrowicz\n","9. 3-D Squares by Bobbi Shortlidge\n","10. Kyoto Evergreen (Furnishing Fabric) by Maya Romanoff\n","\n","Функции:\n","1. View details of an artwork\n","2. Следующая страница\n","3. Предыдущая страница\n","4. Отфильтровать по имени художника\n","5. Выход\n","\n","Список произведений на странице 2\n","1. Girafters (Furnishing Fabric) by Ben Rose\n","2. Panel (Upholstery Fabric) by Yvonne Palmer Pacanovsky Bobrowicz\n","3. Bedcover by None\n","4. Rumble, from Brawling Spitfire Wrestling Series by Mickalene Thomas\n","5. Untitled, plate ten from See America First by H. C. Westermann\n","6. Ceremonial Hanging (palepai) by None\n","7. Jelayah (Overcoat Dress) by None\n","8. Dress by None\n","9. Rose Bowl by Archibald Knox\n","10. Kimkhwab Textile by None\n","\n","Функции:\n","1. View details of an artwork\n","2. Следующая страница\n","3. Предыдущая страница\n","4. Отфильтровать по имени художника\n","5. Выход\n"]}],"source":["import requests\n","\n","\n","def fetch_artworks(page=1):\n","    url = f\"https://api.artic.edu/api/v1/artworks?page={page}&limit=10\"\n","    response = requests.get(url)\n","\n","    if response.status_code == 200:\n","        return response.json()\n","    else:\n","        print(\"Error fetching data from the API.\")\n","        return None\n","\n","def filter_artworks_by_artist(artworks, artist_name):\n","    return [artwork for artwork in artworks if artist_name.lower() in artwork['artist_title'].lower()]\n","\n","def display_artwork_details(artwork):\n","    print(\"\\nDetailed Information:\")\n","    print(f\"Title: {artwork.get('title', 'N/A')}\")\n","    print(f\"Artist: {artwork.get('artist_title', 'N/A')}\")\n","    print(f\"Date: {artwork.get('date_display', 'N/A')}\")\n","    print(f\"Medium: {artwork.get('medium_display', 'N/A')}\")\n","    print(f\"Description: {artwork.get('thumbnail', {}).get('alt_text', 'N/A')}\")\n","\n","def main():\n","    page = 1\n","    while True:\n","        data = fetch_artworks(page)\n","\n","        artworks = data['data']\n","        pagination = data['pagination']\n","\n","        print(\"\\nСписок произведений на странице\", page)\n","        for i, artwork in enumerate(artworks, start=1):\n","            print(f\"{i}. {artwork.get('title', 'Untitled')} by {artwork.get('artist_title', 'Unknown')}\")\n","\n","        print(\"\\nФункции:\")\n","        print(\"1. View details of an artwork\")\n","        print(\"2. Следующая страница\")\n","        print(\"3. Предыдущая страница\")\n","        print(\"4. Отфильтровать по имени художника\")\n","        print(\"5. Выход\")\n","\n","        choice = input(\"Enter your choice: \")\n","\n","        if choice == '1':\n","            try:\n","                selection = int(input(\"Enter the number of the artwork to view details: \")) - 1\n","                if 0 <= selection < len(artworks):\n","                    display_artwork_details(artworks[selection])\n","                else:\n","                    print(\"Invalid selection.\")\n","            except ValueError:\n","                print(\"Please enter a valid number.\")\n","\n","        elif choice == '2':\n","            if pagination['current_page'] < pagination['total_pages']:\n","                page += 1\n","            else:\n","                print(\"Вы на последней странице\")\n","\n","        elif choice == '3':\n","            if page > 1:\n","                page -= 1\n","            else:\n","                print(\"Вы на первой странице\")\n","\n","        elif choice == '4':\n","            artist_name = input(\"Введите имя художника: \")\n","            filtered_artworks = filter_artworks_by_artist(artworks, artist_name)\n","\n","            if filtered_artworks:\n","                print(f\"\\nСписок произведений:\")\n","                for i, artwork in enumerate(filtered_artworks, start=1):\n","                    print(f\"{i}. {artwork.get('title', 'Untitled')} by {artwork.get('artist_title', 'Unknown')}\")\n","\n","                selection = int(input(\"Введите номер произведения: \")) - 1\n","                display_artwork_details(filtered_artworks[selection])\n","\n","            else:\n","                print(\"Не найдены произведения данного художника\")\n","\n","        elif choice == '5':\n","            print(\"Выйти\")\n","            break\n","\n","        else:\n","            print(\"Не удалось получить число! Введите порядковый номер функции\")\n","main()"]},{"cell_type":"markdown","metadata":{"id":"eecUb-akU1ji"},"source":["# Задание 3"]},{"cell_type":"markdown","metadata":{"id":"jsK7IKptU1ji"},"source":["Задача: Создать программу по управлению портфелем криптовалют\n","\n","Цель: Создать скрипт на Python, который извлекает цены на криптовалюты в режиме реального времени, позволяет пользователям управлять портфелем криптовалют, вычисляет общую стоимость портфеля, отслеживает изменения цен и предоставляет исторические данные о ценах для анализа.\n","\n","Требования:\n","Получение текущих цен на криптовалюты:\n","\n","Используйте https://docs.coingecko.com/ для получения актуальных цен на список криптовалют.\n","\n","Управление портфелем:\n","\n","- Позволяет пользователю создавать портфель криптовалют и управлять им, указывая количество каждой криптовалюты, которой он владеет.\n","- Расчитывает общую стоимость портфеля в указанной фиатной валюте (например, долларах США).\n","\n","Отслеживание изменения цен:\n","\n","- Отображение процентного изменения цены для каждой криптовалюты в портфеле за последние 24 часа.\n","- Выделите все криптовалюты, стоимость которых значительно увеличилась или снизилась.\n","\n","Поиск исторических данных о ценах:\n","\n","- Получение исторических данных о ценах на указанную криптовалюту за последнюю неделю.\n","- Предоставьте пользователю возможность визуализировать эти данные в простом текстовом формате (например, цены за день).\n","\n","Взаимодействие с пользователем:\n","\n","- Реализуйте интерфейс командной строки для ввода данных пользователем.\n","- Предоставьте опции для получения текущих цен, управления портфелем, просмотра изменений цен или анализа исторических данных.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_0DToTqlvywa","executionInfo":{"status":"ok","timestamp":1734417077602,"user_tz":-300,"elapsed":532,"user":{"displayName":"Алина Мингалёва","userId":"06959250630310689797"}}},"outputs":[],"source":["import requests\n","\n"]},{"cell_type":"markdown","metadata":{"id":"QGrsZrv5U1s8"},"source":["# Дополнительно: Задание 4"]},{"cell_type":"markdown","metadata":{"id":"qs_XITmYU1s8"},"source":["Задание 4: Проектное\n","\n","Вам необходимо самостоятельно найти откртое API предоставляющее информацию в открытом доступе и реализовать собственный проект!\n","\n","\n","Критерии приемки результата:\n","\n","- Проект включает в себя не менее 5 возможостей для пользователя\n","- Проект позволяет использовать все возможности проекта пользователю при помощи взаимодействия через коммандную строку\n","- Проект работает с открытым API (это значит что при проверке вашей работы преподавателем, преподавателю необходимо просто запустить ячейку с кодом вашего проекта и она будет работать без дополнительных манипуляции)\n","- Проект должен обязательно включать в себя ряд используемых конструкции:\n","    - Функции\n","    - Условные конструкции\n","    - Ввод/вывод\n","    - Словари/Списки\n","- Допускается использование библиотек:\n","    - requests\n","    - datetime\n","    - random"]},{"cell_type":"markdown","metadata":{"id":"VKXhaJi4FL0B"},"source":["**Здесь добавьте описание вашего проекта**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wiA55k1KU1s8"},"outputs":[],"source":["#  А здесь код"]}],"metadata":{"colab":{"collapsed_sections":["ia9UtA0cU1Iy","eecUb-akU1ji","QGrsZrv5U1s8"],"provenance":[{"file_id":"17IcY1UTGzZMUteC1w_OLi1DXlUbhQRJu","timestamp":1730806242748}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}